{"version":3,"sources":["components/Layout/Layout.js","components/TaskListItem.js","components/TaskList/TaskList.js","components/TaskEditor/TaskEditor.js","components/Filter.js","components/App.js","index.js"],"names":["Layout","children","className","TaskListItem","text","completed","onRemove","onUpdate","onUpdateText","clx","push","join","title","onDoubleClick","type","checked","onChange","onClick","TaskList","state","editText","handleChangeEdit","e","preventDefault","setState","target","value","handleSubmitEdit","id","props","handleSubmitCancele","canceleEdit","this","tasks","onRemoveTask","onUpdateTask","onEdit","map","isEdit","key","defaultValue","style","outline","border","Component","TaskEditor","handleChange","handleSubmit","onAddTask","onSubmit","Filter","onChangeFilter","placeholder","App","filter","changeText","isChangeText","addTask","task","uuid","prevState","removeTask","taskId","updateCompleted","onUpdateTextDoubleClick","onEditTextClick","textEdit","onEditCancele","changeFilter","getVisibleTasks","toLowerCase","includes","visibleTasks","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5e8a83ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Layout.css';\r\n\r\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nconst TaskListItem = ({\r\n  text,\r\n  completed,\r\n  onRemove,\r\n  onUpdate,\r\n  onUpdateText\r\n}) => {\r\n  const clx = [\"TaskList-item\"];\r\n\r\n  if (completed) {\r\n    clx.push(\"completed\");\r\n  }\r\n  return (\r\n    <li className={clx.join(\" \")}>\r\n      <p\r\n        title=\"DobleClick to change\"\r\n        className=\"TaskList-text\"\r\n        onDoubleClick={onUpdateText}\r\n      >\r\n        {text}\r\n      </p>\r\n      <label>\r\n        <input type=\"checkbox\" checked={completed} onChange={onUpdate} />\r\n        Completed\r\n      </label>\r\n\r\n      <section className=\"TaskList-actions\">\r\n        <button type=\"button\" className=\"TaskList-button\" onClick={onRemove}>\r\n          Del\r\n        </button>\r\n      </section>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TaskListItem;\r\n","import React, { Component } from \"react\";\r\nimport TaskListItem from \"../TaskListItem\";\r\nimport \"./TaskList.css\";\r\n\r\nexport default class TaskList extends Component {\r\n  state = { editText: \"\" };\r\n\r\n  handleChangeEdit = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      editText: e.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmitEdit = (e, id) => {\r\n    e.preventDefault();\r\n    this.props.editText(this.state.editText, id)\r\n    this.setState({ editText: \"\" });\r\n  };\r\n  handleSubmitCancele=(e, id)=>{\r\n    e.preventDefault();\r\n    this.props.canceleEdit(id)\r\n  }\r\n  render() {\r\n    const { tasks, onRemoveTask, onUpdateTask, onEdit } = this.props;\r\n    return (\r\n      <ul className=\"TaskList\">\r\n        {tasks.map(({ id, text, completed, isEdit }) => (\r\n          <TaskListItem\r\n            key={id}\r\n            text={\r\n              isEdit ? (\r\n                <>\r\n                  <input\r\n                    type=\"text\"\r\n                    defaultValue={text}\r\n                    style={{ outline: \"none\", border: 0 }}\r\n                    onChange={this.handleChangeEdit}\r\n                  />\r\n                  <button type=\"button\" className=\"TaskList-button\" onClick={(e)=>this.handleSubmitEdit(e, id)}>\r\n                    OK\r\n                  </button>\r\n                  <button type=\"button\" className=\"TaskList-button\" onClick={(e)=>this.handleSubmitCancele(e, id)}>\r\n                    X\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                text\r\n              )\r\n            }\r\n            completed={completed}\r\n            onRemove={() => onRemoveTask(id)}\r\n            onUpdate={() => onUpdateTask(id)}\r\n            onUpdateText={() => onEdit(id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './TaskEditor.css';\r\n\r\nexport default class TaskEditor extends Component {\r\n  state = {\r\n    text: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onAddTask(this.state.text);\r\n    this.setState({ text: '' });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <form className=\"TaskEditor\" onSubmit={this.handleSubmit}>\r\n        <label className=\"TaskEditor-label\">\r\n          Ваш рецепт\r\n          <input\r\n            className=\"TaskEditor-input\"\r\n            type=\"text\"\r\n            value={this.state.text}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"TaskEditor-button\">\r\n          Добавить рецепт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"TaskEditor-input\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n        placeholder=\"Поиск рецепта\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\nimport Layout from \"./Layout\";\r\nimport TaskList from \"./TaskList\";\r\nimport TaskEditor from \"./TaskEditor\";\r\nimport Filter from \"./Filter\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    tasks: [],\r\n    filter: \"\",\r\n    changeText: \"\",\r\n    isChangeText: false\r\n  };\r\n\r\n  addTask = text => {\r\n    const task = {\r\n      id: uuid(),\r\n      text,\r\n      completed: false,\r\n      isEdit: false\r\n    };\r\n\r\n    this.setState(prevState => {\r\n      return {\r\n        tasks: [...prevState.tasks, task]\r\n      };\r\n    });\r\n  };\r\n\r\n  removeTask = taskId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        tasks: prevState.tasks.filter(({ id }) => id !== taskId)\r\n      };\r\n    });\r\n  };\r\n\r\n  updateCompleted = taskId => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.map(task =>\r\n        task.id === taskId ? { ...task, completed: !task.completed } : task\r\n      )\r\n    }));\r\n  };\r\n  onUpdateTextDoubleClick = taskId => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.map(task =>\r\n        task.id === taskId\r\n          ? {\r\n              ...task,\r\n              isEdit: !this.state.isChangeText\r\n            }\r\n          : task\r\n      )\r\n    }));\r\n  };\r\n\r\n  onEditTextClick = (textEdit, taskId) => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.map(task =>\r\n        task.id === taskId\r\n          ? {\r\n              ...task,\r\n              isEdit: this.state.isChangeText,\r\n              text: textEdit\r\n            }\r\n          : task\r\n      )\r\n    }));\r\n  };\r\n  onEditCancele = taskId => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.map(task =>\r\n        task.id === taskId\r\n          ? {\r\n              ...task,\r\n              isEdit: this.state.isChangeText\r\n            }\r\n          : task\r\n      )\r\n    }));\r\n  };\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleTasks = () => {\r\n    const { tasks, filter } = this.state;\r\n\r\n    return tasks.filter(task =>\r\n      task.text.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleTasks = this.getVisibleTasks();\r\n\r\n    return (\r\n      <Layout>\r\n        <TaskEditor onAddTask={this.addTask} />\r\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        {visibleTasks.length > 0 && (\r\n          <TaskList\r\n            tasks={visibleTasks}\r\n            onRemoveTask={this.removeTask}\r\n            onUpdateTask={this.updateCompleted}\r\n            onEdit={this.onUpdateTextDoubleClick}\r\n            editText={this.onEditTextClick}\r\n            canceleEdit={this.onEditCancele}\r\n          />\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n// import SignupForm from './components/SignupForm';\r\nimport './base.css';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}